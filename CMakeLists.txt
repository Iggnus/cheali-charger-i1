cmake_minimum_required(VERSION 2.8.11)

SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_C_COMPILER avr-gcc)
SET(CMAKE_CXX_COMPILER avr-g++)

Project(cheali-charger)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

find_package(UnixCommands)
find_package(ChealiChargerInternal REQUIRED)

string(TIMESTAMP timestamp "%Y%m%d")

set(cheali-charger-version 0.99)
set(cheali-charger-eeprom-calibration-version 9)
set(cheali-charger-eeprom-programdata-version 2)
set(cheali-charger-eeprom-settings-version 6)
set(cheali-charger-buildnumber ${timestamp})

message(STATUS "cheali-charger-version: ${cheali-charger-version}")
message(STATUS "cheali-charger-eeprom-calibration-version: ${cheali-charger-eeprom-calibration-version}")
message(STATUS "cheali-charger-eeprom-programdata-version: ${cheali-charger-eeprom-programdata-version}")
message(STATUS "cheali-charger-eeprom-settings-version: ${cheali-charger-eeprom-settings-version}")
message(STATUS "cheali-charger-buildnumber: ${cheali-charger-buildnumber}")

configure_file(src/core/Version.h.in src/core/Version.h)


if(ARM-Cortex-M0)
    message(STATUS "target architecture: ARM-Cortex-M0")
    include(arm-compiler.cmake)
    add_subdirectory(src/nuvoton)
else(ARM-Cortex-M0)
    message(STATUS "target architecture: avr")
    include(avr-compiler.cmake)
    add_subdirectory(src/atmega32)
endif(ARM-Cortex-M0)